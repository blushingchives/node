# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
# relative to the home directory (e.g. "data"). The home directory is
# "$HOME/.tendermint" by default, but could be changed via $TMHOME env variable
# or --home cmd flag.

#######################################################################
###                   Main Base Config Options                      ###
#######################################################################

# TCP or UNIX socket address of the ABCI application,
# or the name of an ABCI application compiled in with the Tendermint binary
proxy_app = "tcp://127.0.0.1:26658"

# A custom human readable name for this node
moniker = "node"

# If this node is many blocks behind the tip of the chain, FastSync
# allows them to catchup quickly by downloading blocks in parallel
# and verifying their commits
fast_sync = true

# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
#   - pure go
#   - stable
# * cleveldb (uses levigo wrapper)
#   - fast
#   - requires gcc
#   - use cleveldb build tag (go build -tags cleveldb)
# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
#   - EXPERIMENTAL
#   - may be faster is some use-cases (random reads - indexer)
#   - use boltdb build tag (go build -tags boltdb)
# * rocksdb (uses github.com/tecbot/gorocksdb)
#   - EXPERIMENTAL
#   - requires gcc
#   - use rocksdb build tag (go build -tags rocksdb)
# * badgerdb (uses github.com/dgraph-io/badger)
#   - EXPERIMENTAL
#   - use badgerdb build tag (go build -tags badgerdb)
db_backend = "goleveldb"

# Database directory
db_dir = "data"

# Output level for logging, including package level options
log_level = "info"

# Output format: 'plain' (colored text) or 'json'
log_format = "plain"

##### additional base config options #####

# Path to the JSON file containing the initial validator set and other meta data
genesis_file = "config/genesis.json"

# Path to the JSON file containing the private key to use as a validator in the consensus protocol
priv_validator_key_file = "config/priv_validator_key.json"

# Path to the JSON file containing the last sign state of a validator
priv_validator_state_file = "data/priv_validator_state.json"

# TCP or UNIX socket address for Tendermint to listen on for
# connections from an external PrivValidator process
#priv_validator_laddr = "tcp://0.0.0.0:55667"
priv_validator_laddr = ""
# Path to the JSON file containing the private key to use for node authentication in the p2p protocol
node_key_file = "config/node_key.json"

# Mechanism to connect to the ABCI application: socket | grpc
abci = "socket"

# If true, query the ABCI app on connecting to a new peer
# so the app can decide if we should keep the connection or not
filter_peers = false


#######################################################################
###                 Advanced Configuration Options                  ###
#######################################################################

#######################################################
###       RPC Server Configuration Options          ###
#######################################################
[rpc]

# TCP or UNIX socket address for the RPC server to listen on
laddr = "tcp://0.0.0.0:26657"

# A list of origins a cross-domain request can be executed from
# Default value '[]' disables cors support
# Use '["*"]' to allow any origin
cors_allowed_origins = ["*"]

# A list of methods the client is allowed to use with cross-domain requests
cors_allowed_methods = ["HEAD", "GET", "POST", ]

# A list of non simple headers the client is allowed to use with cross-domain requests
cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]

# TCP or UNIX socket address for the gRPC server to listen on
# NOTE: This server only supports /broadcast_tx_commit
grpc_laddr = ""

# Maximum number of simultaneous connections.
# Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
grpc_max_open_connections = 900

# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
unsafe = false

# Maximum number of simultaneous connections (including WebSocket).
# Does not include gRPC connections. See grpc_max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
max_open_connections = 900

# Maximum number of unique clientIDs that can /subscribe
# If you're using /broadcast_tx_commit, set to the estimated maximum number
# of broadcast_tx_commit calls per block.
max_subscription_clients = 100

# Maximum number of unique queries a given client can /subscribe to
# If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
# the estimated # maximum number of broadcast_tx_commit calls per block.
max_subscriptions_per_client = 5

# Experimental parameter to specify the maximum number of events a node will
# buffer, per subscription, before returning an error and closing the
# subscription. Must be set to at least 100, but higher values will accommodate
# higher event throughput rates (and will use more memory).
experimental_subscription_buffer_size = 200

# Experimental parameter to specify the maximum number of RPC responses that
# can be buffered per WebSocket client. If clients cannot read from the
# WebSocket endpoint fast enough, they will be disconnected, so increasing this
# parameter may reduce the chances of them being disconnected (but will cause
# the node to use more memory).
#
# Must be at least the same as "experimental_subscription_buffer_size",
# otherwise connections could be dropped unnecessarily. This value should
# ideally be somewhat higher than "experimental_subscription_buffer_size" to
# accommodate non-subscription-related RPC responses.
experimental_websocket_write_buffer_size = 200

# If a WebSocket client cannot read fast enough, at present we may
# silently drop events instead of generating an error or disconnecting the
# client.
#
# Enabling this experimental parameter will cause the WebSocket connection to
# be closed instead if it cannot read fast enough, allowing for greater
# predictability in subscription behaviour.
experimental_close_on_slow_client = false

# How long to wait for a tx to be committed during /broadcast_tx_commit.
# WARNING: Using a value larger than 10s will result in increasing the
# global HTTP write timeout, which applies to all connections and endpoints.
# See https://github.com/tendermint/tendermint/issues/3435
timeout_broadcast_tx_commit = "10s"

# Maximum size of request body, in bytes
max_body_bytes = 100000000

# Maximum size of request header, in bytes
max_header_bytes = 1048576

# The path to a file containing certificate that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# If the certificate is signed by a certificate authority,
# the certFile should be the concatenation of the server's certificate, any intermediates,
# and the CA's certificate.
# NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_cert_file = ""

# The path to a file containing matching private key that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# NOTE: both tls-cert-file and tls-key-file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_key_file = ""

# pprof listen address (https://golang.org/pkg/net/http/pprof)
pprof_laddr = "localhost:6060"

#######################################################
###           P2P Configuration Options             ###
#######################################################
[p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:26656"

# Address to advertise to peers for them to dial
# If empty, will use the same port as the laddr,
# and will introspect on the listener or use UPnP
# to figure out the address. ip and port are required
# example: 159.89.10.97:26656
external_address = "178.211.139.222:10006"

# Comma separated list of seed nodes to connect to
seeds = "ade4d8bc8cbe014af6ebdf3cb7b1e9ad36f412c0@seeds.polkachu.com:11856"

# Comma separated list of nodes to keep persistent connections to
persistent_peers = "8367c77c0e46d40e52d8f653a85c7a4e2c8b1d7e@65.109.112.170:28656,1d85c9f16727584753db78b5b54eedf0ce8de3ed@51.159.16.49:5060,52739251216bd8e7d17ac69810f83bf58a7b1b10@47.144.18.69:26656,ccb4fffc9caa2f0d8da833f3cad906b833320bab@51.222.254.98:26656,e15960141badca83ea9865f9207a7e3f85e18ef3@65.109.90.96:36656,4b0ce4eb54545381534b766edaa028c1e930a4d7@143.198.89.128:26656,3533d12b4dcacec1ab74183fad9cc65cb9e71ac7@198.244.167.22:5060,abf615ae5b6d8b5e391236f9710d5ccb1193e7cf@65.108.201.138:11856,524c4383f960e3747c9ee8f36ad619f0e108a171@135.181.166.19:22656,4fb4e8c78692a7ed9b4d76f0f50129f17358484a@51.81.66.123:11856,89757803f40da51678451735445ad40d5b15e059@169.155.45.187:26656,b8e8c1738a49cd6143cf83287a5087c2618ebca0@141.95.47.82:30256,f62a0842be95a33b191879c977eed2072e37926b@57.128.20.147:30256,19b48cd1d62009514a7a375ab4fd198008d96244@213.239.213.142:11856,9dc8a19299064e8d5a414a1fc25dd0d12d9871c8@138.201.16.240:30095,4c22af952c3af002136397d48f9933d0432ace7a@148.251.79.204:26656,d3427d444b6909529d73025fe32a73dfea7b90d1@148.251.85.115:26656,cbcc719e3fdb49ff4aead5e8a7eef2746a8d68b7@136.243.67.44:11856,4db916788d45d5454cfe7a68ca02c56996ee6b96@194.163.151.124:26656,3d150f6a71caca5607daff69c9049c04c37da64e@51.210.223.186:30095,b802fbfb83d6400639f17f2883f30a46ee6b05ad@51.210.223.185:32095,ab587b4bf216c348657ed3dde85d1f48c5ad279c@15.235.115.155:10004,42e9c232f830e39824747ce6a4e5ef1e765cad72@67.222.144.195:26656,1cbc1bff7cdaeffd5a25583f9525f44fb55f7215@95.214.54.28:26156,a76e18bffe05fb1332dcd4340fc6e2b482ed38fb@195.3.222.246:26656,4f8170417bc3e6141217a26d636a6526021cf7e2@65.109.154.185:27656,ff7a1787ea93a49ece2ee92f601a4c52951278c4@185.119.118.112:2000,35af92154fdb2ac19f3f010c26cca9e5c175d054@65.108.238.61:27656,935c1065ad23338a5e6a75f08fb650f9f46dbd3e@65.108.201.167:26656,94da43cae2bc6e9d16decfe3d78c64603f5ad9e2@192.118.76.122:26616,7878121e8fa201c836c8c0a95b6a9c7ac6e5b101@51.161.117.214:26656,70bb20d6078ff90294ebd7c9803de25b73d48955@148.251.77.27:26656,e751b31b5444ed4a7489a456be805c736756eeb8@195.3.223.19:26656,f46cdadb43b2078fba2a8b261e0109c18967fdaf@95.214.55.140:21156,a7e7864f241db457f38d8e5b5b3c3de989dea2fe@66.94.126.62:26656,380243e75be25ef7882f9f83f8215358a1622d4d@162.55.92.114:2140,644c346a03df3dc587ae190d7d944b96a31f5eef@141.95.124.226:32523,012b9888db14d1c4cc8f08320ce1921e22fcc329@65.109.33.48:18656,413bd0410b649de5070b2fe8356cad356459dc37@65.108.235.165:26656,780ee91b43bcdced2daebee61996742f6b01b579@138.201.197.119:2000,e92b3424ba53c10aefdf9b402f4c03888de96c2e@45.77.61.157:26656,fc6acf089979cc311f8f2a161647934024de8c9c@31.220.87.65:26756,4cecae6fc94c2ddb23bcf553623e4dd0fb41ae97@13.230.20.39:61003,7f83a8f94bddb377ff195b3c9ee2abc91ddf0433@51.81.242.74:26656,6f3129d01218b939511cccf7e0318bfe872d97c4@65.109.33.181:26656,f470ff1ea9c97191a0fc969665249b65a57293e7@193.181.34.80:26656,5a70fdcf1f51bb38920f655597ce5fc90b8b88b8@136.244.29.116:41656,ecafd5cadaf3526a588550a7bc343ce2670c988d@185.16.39.231:26656,1fb8ef552bf812a15d0d81ffbc8a3eb77b4319e6@65.21.231.176:26656,b80cf7882c8cab4894d41ccd4f5a00406d8b5f7d@146.59.52.48:30095,2e982ccc231c1c8114a30757e756fab24d8a9e5a@65.109.105.119:36656,3a7733d4b670a672db326bd6e5f8ae37e14a3dbd@138.201.226.227:26656,58fc044463399f5c2d94a39e3474ea6196dab0bd@65.108.198.118:11856,66c551ebcb68fe343c7e2720593dc47426813a68@93.189.30.101:26656,8e4fe99c78d3f01087e8856b95817f24ba4238b1@37.179.170.94:26656,ffc433d20c23eea2b905e1239b5dc79c69ef4167@84.80.24.31:26156,15679999b404a9ee027dc9f5e795d6c4fddb6cee@51.91.152.102:20000,221efa4a7cc336c661000839a5fbc0c7fb25118d@65.108.7.249:11856,12c6bf9db28291d0c9ae39d983c1d17226bd1442@51.250.108.105:26656,42bd37d33230f6e442c93b3b1a78218137f4490e@192.99.15.159:26656,a0927acbf1e931fc16e11e454b328c991e56d3fe@51.89.155.17:44656,eb9742d81b436b95e324816794229a9efdaf8ea8@142.132.155.170:26656,c62e0701155a690616fcd3a57fa2fda444840561@65.108.76.242:32095,9a725c47c49464facc147fe29fe1751f1ac6ec0e@65.21.238.147:56656,55d5419822feeab727b2be57e834534cbd91d6a4@65.108.69.91:26656,37c8214f46ced2e28b4dcbc1407256440fb8d7f5@51.89.78.52:26656,e1b058e5cfa2b836ddaa496b10911da62dcf182e@169.155.169.84:26656,09076c7908db88316498cf4cd4702a8d269e0da9@15.235.114.85:26656,0cd7caa189ab5e3fb19b4d32516027b578ab7838@45.79.118.43:26656,129771a48f43b83c6144c7d282ad1da62434cc07@15.204.197.12:26656,b21f57d5054aaa4cf8e3599bbe13719a47cc02d4@141.94.193.12:14656,73eaed453b7cb4a13937dabb1e5f5cd3f6cdf18d@89.163.146.22:26656,897c55fb33076c9cecc56f6c04e2a3cbed195e7c@185.248.24.20:26796,4a48d6ca915a5618c1db13554ff3803ba2cb7bd9@65.109.52.178:26656,b212d5740b2e11e54f56b072dc13b6134650cfb5@169.155.169.213:26656,0a51eaa669fa7ad9ad6a8d19942f324725596f23@65.109.80.92:26656,b12591db8b67f7a78b2834b5c122299fdb6c8deb@65.108.201.154:2060,f2fe529a8d41ce4beffccb2e00342e74df9ebeca@78.31.71.246:26656,5ae54af5483ff090e57a51f9f3568490373e2419@135.181.26.211:26656,4018be5af4189573366762fa168826b4408418db@135.125.188.17:32095,07613f60a16bddef926715bb11fa7009521c1ef4@195.201.245.120:26656,c030a6692eb4f39b00b1dbb68e47698230bc2de9@142.132.248.34:11856,0743497e30049ac8d59fee5b2ab3a49c3824b95c@198.244.200.196:26656,2e3c72b0b6f3007a109e78864e22661dd7071c06@38.242.130.118:26656,ebc272824924ea1a27ea3183dd0b9ba713494f83@178.211.139.77:26796,6cab44dad82daa85fed9ea99d5ab398293006984@65.21.136.170:26656,26d19e5b3f3a5ebafe827dabca4ef008d9c5e6fd@168.119.15.94:26656,97e4468ac589eac505a800411c635b14511a61bb@134.65.195.105:26656,77fb04418d663a7cb6dce71bead97a40a57818f6@46.4.216.135:26656,fe5dda5560f614cc9dcccba1e27de300e1f268b9@31.17.205.204:26666,553dfc2712cd890a423c70fce1f60781a20876ad@65.109.95.26:28656,de08e6178779ff3b19a8b6d22a05664392cb2b35@185.216.179.205:26656,8abdc219a07d10661ec725254354f6eb535ff039@167.235.211.119:26656,263b9b4525e3e568e293677daa0d64d3087815f0@65.108.106.156:26676,2e153ad2cb215d9e98c8fccfb43dae235c8fed56@173.71.98.130:26656,861f4624276d80aa538ad446ce608910ca24940d@148.251.177.45:11656,d5dba1794baa34729d9691ee9b781efc9dd123e3@47.75.104.62:26656,d6f2eee997d108d4fde5683e31d678427376dfce@77.68.27.75:26656,9fc595e206a4cac999b45800394d3c8da50bdeab@107.155.81.122:26656,6340a51d02e809e2fb46c708875a30cdf25a6343@77.68.117.73:15602,5d51ac37fed2c34636661633a66de2fea0056ba6@65.108.230.49:26656,a9ed3a9256cbabe889b2989ad99a3e7e173c3ffe@108.165.178.242:26655,8e6a72990e2ee4066163985737cf153b21380a04@135.181.209.51:26787,4a87e847c8fc15812e4d8ce57c43581ab0e7a4dd@95.214.55.100:26256,6212f700687500f96ef56af3488e99fc4b009e19@212.68.34.95:26656,cedf10f69de7d77b358964a1b802a15ad79a7c97@74.80.183.130:26655,2076be2d3d4d1e4da9ba33b1a365bfcc14eb46c3@216.158.230.242:26786,1f0cacffa06af0633e1a4cb6710f57081147081d@109.236.88.56:21156,9c8826ceeb1254d16856092a50df4fd720910362@50.116.49.237:26656,01d708d4124f30700c05c97947ae10231d8755f7@95.217.197.100:26655,44cdb43183527cad8a3a9b032532e1b4422e53e7@24.158.14.210:26656,d02fc7c5db5e502bb78ceeb81067ddab5b0cf51a@89.39.104.128:13656,b29969a2384159db8f8052bc118066bd067157c4@85.215.105.19:15602,a430d40d7c4272a649b8309abed412f562057539@3.37.223.124:26656,c55d35ef908b74c2ddec2f47dbdb4032d7dfbcd4@23.88.69.22:27266,c6eaf84ee15c3f311236b19f5de2c231d96e5ac4@95.217.209.187:26656,da2673cf09dc2c124947827f4cf5e7c17114d504@142.132.202.98:26656,7c26c34148779b1d0979eb069dbe354752a3644f@5.9.84.213:25656,698529d303400cc4dff026c6c47eb0dc6547b595@95.216.43.190:36346,e726816f42831689eab9378d5d577f1d06d25716@176.9.188.21:26656,9a69e7fd992b8a731720b97ffcfdd48f80ca26eb@65.108.137.22:26656,beb3329e969ae64d97c276f0ed0a1773ebdf61dc@146.19.24.142:26656,56598f1d3153b4368a0d9ac083b379b09ae2b531@162.19.95.239:11856,4ae125f9c9b8e2f1ac83749c2209e26056b97851@65.108.238.103:11856,5d0f0bc1c2d60f1d273165c5c8cefc3965c3d3c9@65.108.233.175:26656,b4cbe0e3f6436833dd50ee4ba5cb472605652953@35.213.142.220:26656,e8f53eab61a5cb9f2c3460c739080ee86f2b80cc@86.28.220.52:26656,459229e89fd0722f7f758b7de782d0eb94aa9639@146.59.85.223:11856,213dbb8301ce1c0f5662a9b723bd613f15e1dd4e@75.119.157.167:30656"

# UPNP port forwarding
upnp = false

# Path to address book
addr_book_file = "config/addrbook.json"

# Set true for strict address routability rules
# Set false for private or local networks
addr_book_strict = true

# Maximum number of inbound peers
max_num_inbound_peers = 40

# Maximum number of outbound peers to connect to, excluding persistent peers
max_num_outbound_peers = 10

# List of node IDs, to which a connection will be (re)established ignoring any existing limits
unconditional_peer_ids = ""

# Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
persistent_peers_max_dial_period = "0s"

# Time to wait before flushing messages out on the connection
flush_throttle_timeout = "100ms"

# Maximum size of a message packet payload, in bytes
max_packet_msg_payload_size = 1024

# Rate at which packets can be sent, in bytes/second
send_rate = 5120000

# Rate at which packets can be received, in bytes/second
recv_rate = 5120000

# Set true to enable the peer-exchange reactor
pex = true

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Does not work if the peer-exchange reactor is disabled.
seed_mode = false

# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
private_peer_ids = ""

# Toggle to disable guard against peers connecting from the same ip.
allow_duplicate_ip = false

# Peer connection configuration.
handshake_timeout = "20s"
dial_timeout = "3s"

#######################################################
###          Mempool Configuration Option          ###
#######################################################
[mempool]

recheck = true
broadcast = true
wal_dir = ""

# Maximum number of transactions in the mempool
size = 5000

# Limit the total size of all txs in the mempool.
# This only accounts for raw transactions (e.g. given 1MB transactions and
# max_txs_bytes=5MB, mempool will only accept 5 transactions).
max_txs_bytes = 1073741824

# Size of the cache (used to filter transactions we saw earlier) in transactions
cache_size = 10000

# Do not remove invalid transactions from the cache (default: false)
# Set to true if it's not possible for any invalid transaction to become valid
# again in the future.
keep-invalid-txs-in-cache = false

# Maximum size of a single transaction.
# NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.
max_tx_bytes = 1048576

# Maximum size of a batch of transactions to send to a peer
# Including space needed by encoding (one varint per transaction).
# XXX: Unused due to https://github.com/tendermint/tendermint/issues/5796
max_batch_bytes = 0

#######################################################
###         State Sync Configuration Options        ###
#######################################################
[statesync]
# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
# the network to take and serve state machine snapshots. State sync is not attempted if the node
# has any local state (LastBlockHeight > 0). The node will have a truncated block history,
# starting from the height of the snapshot.
enable = true

# RPC servers (comma-separated) for light client verification of the synced state machine and
# retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding
# header hash obtained from a trusted source, and a period during which validators can be trusted.
#
# For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2
# weeks) during which they can be financially punished (slashed) for misbehavior.
rpc_servers = "https://kujira-rpc.polkachu.com:443,https://kujira-rpc.polkachu.com:443"
trust_height = 8259427
trust_hash = "E494401DF48BC2DE09A034BA76775B05BBF58793C3C1536AD8CECCFE5AC770DF"
trust_period = "168h0m0s"

# Time to spend discovering snapshots before initiating a restore.
discovery_time = "15s"

# Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).
# Will create a new, randomly named directory within, and remove it when done.
temp_dir = ""

# The timeout duration before re-requesting a chunk, possibly from a different
# peer (default: 1 minute).
chunk_request_timeout = "10s"

# The number of concurrent chunk fetchers to run (default: 1).
chunk_fetchers = "4"

#######################################################
###       Fast Sync Configuration Connections       ###
#######################################################
[fastsync]

# Fast Sync version to use:
#   1) "v0" (default) - the legacy fast sync implementation
#   2) "v1" - refactor of v0 version for better testability
#   2) "v2" - complete redesign of v0, optimized for testability & readability
version = "v0"

#######################################################
###         Consensus Configuration Options         ###
#######################################################
[consensus]

wal_file = "data/cs.wal/wal"

# How long we wait for a proposal block before prevoting nil
timeout_propose = "3s"
# How much timeout_propose increases with each round
timeout_propose_delta = "500ms"
# How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
timeout_prevote = "1s"
# How much the timeout_prevote increases with each round
timeout_prevote_delta = "500ms"
# How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
timeout_precommit = "1s"
# How much the timeout_precommit increases with each round
timeout_precommit_delta = "500ms"
# How long we wait after committing a block, before starting on the new
# height (this gives us a chance to receive some more precommits, even
# though we already have +2/3).
timeout_commit = "1500ms"

# How many blocks to look back to check existence of the node's consensus votes before joining consensus
# When non-zero, the node will panic upon restart
# if the same consensus key was used to sign {double_sign_check_height} last blocks.
# So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.
double_sign_check_height = 0

# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
skip_timeout_commit = false

# EmptyBlocks mode and possible interval between empty blocks
create_empty_blocks = true
create_empty_blocks_interval = "0s"

# Reactor sleep duration parameters
peer_gossip_sleep_duration = "100ms"
peer_query_maj23_sleep_duration = "2s"

#######################################################
###   Transaction Indexer Configuration Options     ###
#######################################################
[tx_index]

# What indexer to use for transactions
#
# The application will set which txs to index. In some cases a node operator will be able
# to decide which txs to index based on configuration set in the application.
#
# Options:
#   1) "null"
#   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
# 		- When "kv" is chosen "tx.height" and "tx.hash" will always be indexed.
indexer = "kv"

#######################################################
###       Instrumentation Configuration Options     ###
#######################################################
[instrumentation]

# When true, Prometheus metrics are served under /metrics on
# PrometheusListenAddr.
# Check out the documentation for the list of available metrics.
prometheus = false

# Address to listen for Prometheus collector(s) connections
prometheus_listen_addr = ":26660"

# Maximum number of simultaneous connections.
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
max_open_connections = 3

# Instrumentation namespace
namespace = "tendermint"
